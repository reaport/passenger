@using System.Text.Json
<!DOCTYPE html>
<html>
<head>
    <title>Passenger control</title>
    <style>
        .container {
            margin: 20px;
        }
        .button {
            margin: 5px;
            padding: 10px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }
        .button:hover {
            background-color: #0056b3;
        }
        .result-box, .log-box {
            margin-top: 20px;
            padding: 10px;
            border: 1px solid #ccc;
            background-color: #f9f9f9;
            width: 50%;
        }
        .log-box {
            height: 150px;
            overflow-y: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Passenger control panel</h1>

        <h2>Flight Controller</h2>
        <a href="@Url.Action("GetInitialisedFlights")" class="button">Get Initialised Flights</a>
        <a href="@Url.Action("GetPassengersPerFlight")" class="button">Get Passengers Per Flight</a>

        <h2>Driver Controller</h2>
        <a href="@Url.Action("PauseDriverService")" class="button">Pause Driver Service</a>
        <a href="@Url.Action("ResumeDriverService")" class="button">Resume Driver Service</a>

        <div class="result-box">
            <h3>Result:</h3>
            @if (ViewBag.Message != null)
            {
                <p>@ViewBag.Message</p>
            }
            else if (Model != null)
            {
                <pre>@JsonSerializer.Serialize(Model, new JsonSerializerOptions { WriteIndented = true })</pre>
            }
            else
            {
                <p>No data available.</p>
            }
        </div>

        <button class="button" onclick="refreshLogs()">Refresh Logs</button>
        
        <h3>Logs:</h3>
        <div class="log-box"> 
            <div id="logs-content">
                @if (ViewBag.Logs != null)
                {
                    foreach (var log in ViewBag.Logs)
                    {
                        <p>@log</p>
                    }
                }
                else
                {
                    <p>No logs available.</p>
                }
            </div>
        </div>
    </div>

    <script>
        // Function to refresh logs
        function refreshLogs() {
            fetch('/Home/GetLogs') // Call the GetLogs endpoint
                .then(response => response.json()) // Parse the JSON response
                .then(data => {
                    const logsContent = document.getElementById('logs-content');
                    logsContent.innerHTML = ''; // Clear the current logs

                    if (data.length > 0) {
                        data.forEach(log => {
                            const logElement = document.createElement('p');
                            logElement.textContent = log;
                            logsContent.appendChild(logElement);
                        });
                    } else {
                        const noLogsElement = document.createElement('p');
                        noLogsElement.textContent = 'No logs available.';
                        logsContent.appendChild(noLogsElement);
                    }
                })
                .catch(error => {
                    console.error('Error fetching logs:', error);
                });
        }

        // Auto-refresh logs every 5 seconds (5000 milliseconds)
        setInterval(refreshLogs, 5000);

        // Initial call to load logs when the page loads
        refreshLogs();
    </script>
</body>
</html>